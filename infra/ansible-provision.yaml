---
- hosts: all

  tasks:

    - name: Install docker
      ansible.builtin.apt:
        name: docker.io
        state: latest
        update_cache: true
      become: true

    - name: Build container image locally
      community.docker.docker_image:
        name: superlists
        source: build
        state: present
        build:
          path: ..
          platform: linux/amd64
        force_source: true
      delegate_to: 127.0.0.1

    - name: Export container image locally
      community.docker.docker_image:
        name: superlists
        archive_path: /tmp/superlists-img.tar
        source: local
      delegate_to: 127.0.0.1

    - name: upload_image_to_server
      ansible.builtin.copy:
        src: /tmp/superlists-img.tar
        dest: /tmp/superlists-img.tar

    - name: Import container image on server
      community.docker.docker_image:
        name: superlists
        load_path: /tmp/superlists-img.tar
        source: load
        force_source: true
        state: present
      become: true

    - name: Ensure .env file exists
      ansible.builtin.template:
        src: env.j2
        dest: ~/superlists.env
        force: false
      vars:
        host: "{{ inventory_hostname }}"
        secret_key: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') }}"

    - name: Ensure db.sqlite3 file exists outside container
      ansible.builtin.file:
        path: /home/mattquinn/db.sqlite3
        state: touch

    - name: Run container
      community.docker.docker_container:
        name: superlists
        image: superlists
        state: started
        recreate: true
        env_file: ~/superlists.env
        mounts:
          - type: bind
            source: /home/mattquinn/db.sqlite3
            target: /src/db.sqlite3
        ports: 80:8888

    - name: Run migration inside container
      community.docker.docker_container_exec:
        container: superlists
        command: poetry run python ./manage.py migrate
